services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    container_name: postgres-db
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:5432'
    networks:
      - rural-net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rural-api
    environment:
      - PORT=${PORT}
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - db
    volumes:
      - ./src:/app/src
    networks:
      - rural-net
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3000/healthcheck',
        ]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: rural-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - '${PGADMIN_HOST_PORT}:${PGADMIN_CONTAINER_PORT}'
    depends_on:
      - db

    networks:
      - rural-net

networks:
  rural-net:
    driver: bridge
